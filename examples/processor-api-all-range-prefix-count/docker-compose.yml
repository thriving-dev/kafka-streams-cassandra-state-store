---
version: '3'

services:
  kafka:
    container_name: kafka
    image: debezium/kafka:2.2.0.Final
    ports:
      - 19092:19092
    restart: always
    environment:
      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
      - NODE_ID=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:9093
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_LISTENERS=CONTROLLER://0.0.0.0:9093,INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:19092
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9092,OUTSIDE://localhost:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
    healthcheck:
      test: [ "CMD", "/kafka/bin/kafka-topics.sh", "--bootstrap-server=localhost:9092", "--list" ]
      interval: 2s
      timeout: 2s
      retries: 10

  kafka-create-topic-1:
    container_name: kafka-create-topic-1
    image: debezium/kafka:2.2.0.Final
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ''
    command: /bin/bash -c "echo creating topic streams-plaintext-input && /kafka/bin/kafka-topics.sh --bootstrap-server=kafka:9092 --create --partitions=6 --replication-factor=1 --topic=streams-plaintext-input"

  kafka-create-topic-2:
    container_name: kafka-create-topic-2
    image: debezium/kafka:2.2.0.Final
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ''
    command: /bin/bash -c "echo creating topic streams-wordcount-output && /kafka/bin/kafka-topics.sh --bootstrap-server=kafka:9092 --create --partitions=6 --replication-factor=1 --topic=streams-wordcount-output"

#  kafka-1:
#    container_name: kafka-1
#    image: debezium/kafka:2.2.0.Final
#    restart: always
#    ports:
#      - 19092:19092
#    environment:
#      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
#      - NODE_ID=1
#      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093,2@kafka-2:9093,3@kafka-3:9093
#      - CREATE_TOPICS=streams-plaintext-input:6:3,streams-wordcount-output:6:3
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,OUTSIDE://0.0.0.0:19092
#      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-1:9092,OUTSIDE://localhost:19092
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
#
#  kafka-2:
#    container_name: kafka-2
#    image: debezium/kafka:2.2.0.Final
#    restart: always
#    ports:
#      - 29092:29092
#    environment:
#      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
#      - NODE_ID=2
#      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,OUTSIDE://0.0.0.0:29092
#      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-2:9092,OUTSIDE://localhost:29092
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
#
#  kafka-3:
#    container_name: kafka-3
#    image: debezium/kafka:2.2.0.Final
#    restart: always
#    ports:
#      - 39092:39092
#    environment:
#      - CLUSTER_ID=5Yr1SIgYQz-b-dgRabWx4g
#      - NODE_ID=3
#      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka-1:9093,2@kafka-2:9093,3@kafka-3:9093
#      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
#      - KAFKA_LISTENERS=INTERNAL://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093,OUTSIDE://0.0.0.0:39092
#      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-3:9092,OUTSIDE://localhost:39092
#      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,INTERNAL:PLAINTEXT,OUTSIDE:PLAINTEXT
#      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
#      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER

  scylla:
    container_name: scylla
    image: scylladb/scylla:5.1
    command: --smp 1 --memory 750M --overprovisioned 1 --experimental 1
    ports:
      - 9042:9042
    restart: always
    healthcheck:
      test: [ "CMD", "cqlsh", "-e describe keyspaces" ]
      interval: 10s
      timeout: 10s
      retries: 15

  scylla-load-keyspace:
    container_name: scylla-load-keyspace
    image: scylladb/scylla:5.1
    depends_on:
      scylla:
        condition: service_healthy
    volumes:
      - ./src/main/resources/cassandra_schema.cql:/schema.cql
    entrypoint: ''
    command: /bin/bash -c "echo loading scylladb keyspace && cqlsh scylla -f /schema.cql"
